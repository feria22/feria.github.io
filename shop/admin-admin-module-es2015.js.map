{"version":3,"sources":["./src/app/admin/add-page/add-page.component.ts","./src/app/admin/add-page/add-page.component.html","./src/app/admin/admin.module.ts","./src/app/admin/dashboard-page/dashboard-page.component.ts","./src/app/admin/dashboard-page/dashboard-page.component.html","./src/app/admin/edit-page/edit-page.component.ts","./src/app/admin/edit-page/edit-page.component.html","./src/app/admin/login-page/login-page.component.ts","./src/app/admin/login-page/login-page.component.html","./src/app/admin/orders-page/orders-page.component.ts","./src/app/admin/orders-page/orders-page.component.html","./src/app/admin/shared/admin-layout/admin-layout.component.ts","./src/app/admin/shared/admin-layout/admin-layout.component.html","./src/app/shared/auth.guard.ts","./src/app/shared/search.pipe.ts"],"names":[],"mappings":"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","file":"admin-admin-module-es2015.js","sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ProductService } from 'src/app/shared/product.service';\n// import { timingSafeEqual } from 'crypto';\nimport { Router } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-add-page',\n  templateUrl: './add-page.component.html',\n  styleUrls: ['./add-page.component.scss']\n})\nexport class AddPageComponent implements OnInit {\n  form: FormGroup\n  submitted = false;\n  constructor(\n    private prodServ: ProductService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      type: new FormControl(null, Validators.required),\n      title: new FormControl(null, Validators.required),\n      photo: new FormControl(null, Validators.required),\n      info: new FormControl(null, Validators.required),\n      price: new FormControl(null, Validators.required)\n    })\n  }\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitted = true;\n    const product = {\n      type: this.form.value.type,\n      title: this.form.value.title,\n      photo: this.form.value.photo,\n      info:  this.form.value.info,\n      price: this.form.value.price,\n      date: new Date()\n    }\n\n    this.prodServ.create(product).subscribe(res => {\n      this.form.reset();\n      this.submitted = false;\n      this.router.navigate(['/admin','dashboard'])\n    }\n    )\n\n  }\n\n}\n","<form [formGroup]='form' (ngSubmit)='submit()'>\n    <h2>Add new product</h2>\n  \n    <div class=\"form-control\">\n        <label for=\"type\">Type</label>\n        <select name=\"type\" id=\"type\" formControlName=\"type\">\n            <option value=\"Laptop\">Laptop</option>\n            <option value=\"Tablet\">Tablet</option>\n            <option value=\"Phone\">Phone</option>\n        </select> \n        <div *ngIf=\"form.get('type').touched && form.get('type').invalid\" class='validation'>\n            <small *ngIf=\"form.get('type').errors.required\"> Chose type</small>\n        </div>\n    </div>\n    <div class=\"form-control\">\n        <label for=\"title\">Title</label>\n        <input type=\"title\" id=\"title\" formControlName=\"title\" >  \n        <div *ngIf=\"form.get('title').touched && form.get('title').invalid\" class='validation'>\n            <small *ngIf=\"form.get('title').errors.required\"> Chose title</small>\n        </div>\n    </div>\n    <div class=\"form-control\">\n        <label for=\"photo\">Photo</label>\n        <quill-editor formControlName=\"photo\"></quill-editor>\n    </div>\n    <div class=\"form-control\">\n        <label for=\"info\">Information:</label>\n        <quill-editor formControlName=\"info\"></quill-editor>\n\n    </div>\n    <div class=\"form-control\">\n        <label for=\"price\">Price</label>\n        <input type=\"price\" id=\"price\" formControlName=\"price\" >  \n        <div *ngIf=\"form.get('price').touched && form.get('price').invalid\" class='validation'>\n            <small *ngIf=\"form.get('price').errors.required\"> Chose price</small>\n        </div>\n    </div>\n  \n    <button type=\"submit\" class='btn btn-primary btn-block' [disabled]=\"form.invalid || submitted\">Add</button>\n    </form>","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AdminLayoutComponent } from './shared/admin-layout/admin-layout.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { DashboardPageComponent } from './dashboard-page/dashboard-page.component';\r\nimport { AddPageComponent } from './add-page/add-page.component';\r\nimport { OrdersPageComponent } from './orders-page/orders-page.component';\r\nimport { EditPageComponent } from './edit-page/edit-page.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthGuard } from '../shared/auth.guard';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { SearchPipe } from '../shared/search.pipe';\r\n@NgModule({\r\n    declarations: [\r\n        AdminLayoutComponent,\r\n        LoginPageComponent,\r\n        DashboardPageComponent,\r\n        AddPageComponent,\r\n        EditPageComponent,\r\n        OrdersPageComponent,\r\n        SearchPipe,\r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        QuillModule.forRoot(),\r\n        RouterModule.forChild([\r\n            {\r\n                path: '', component: AdminLayoutComponent, children: [\r\n                    {path: '', redirectTo: '/admin/login', pathMatch: 'full'},\r\n                    {path: 'login', component: LoginPageComponent},\r\n                    {path: 'dashboard', component: DashboardPageComponent,canActivate:[AuthGuard]},\r\n                    {path: 'add', component: AddPageComponent,canActivate:[AuthGuard]},\r\n                    {path: 'orders', component: OrdersPageComponent,canActivate:[AuthGuard]},\r\n                    {path: 'product/:id/edit', component: EditPageComponent,canActivate:[AuthGuard]},\r\n                ]\r\n            }\r\n        ])\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AdminModule{\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/shared/product.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard-page',\n  templateUrl: './dashboard-page.component.html',\n  styleUrls: ['./dashboard-page.component.scss']\n})\nexport class DashboardPageComponent implements OnInit {\n  products = []\n  pSub: Subscription\n  rSub: Subscription\n  productName\n  \n  constructor(\n    private prodServ:ProductService\n  ) { }\n\n  ngOnInit() {\n    this.pSub = this.prodServ.getALL().subscribe(products => {\n      console.log(products)\n      this.products = products\n    })\n  }\n  ngOnDestroy() {\n    if (this.pSub) {\n      this.pSub.unsubscribe()\n    }\n    if (this.rSub) {\n      this.rSub.unsubscribe()\n    }\n  }\n  remove(id) {\n    this.rSub =this.prodServ.remove(id).subscribe(\n      () => {\n        this.products=this.products.filter(product=>product.id!==id)\n       }\n     )\n  }\n  \n\n\n}\n","<div *ngIf=\"products.length; else loading\">\n    <h2 class=\"text-center\">Dashboard of products</h2>\n    <div class=\"form-control\">\n        <input type=\"text\" placeholder=\"find a product ...\" [(ngModel)]=\"productName\">\n    </div>\n    <table>\n        <thead>\n            <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Date of creation</th>\n                <th>Open</th>\n                <th>Delete</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let product of products | search: productName ;let idx=index\">\n                <td> {{ idx+1 }} </td>\n                <td> {{product.title}} </td>\n                <td> {{product.price}} </td>\n                <td> {{product.date | date:'dd.MM.yy, H:m' }} </td>\n                <td>\n                    <button class=\"btn btn-dark\" [routerLink]=\"['/admin','product',product.id,'edit']\">Open</button>\n                </td>\n                <td>\n                    <button class=\"btn btn-danger\" (click)=\"remove(product.id)\">Delete</button>\n                </td> \n            </tr>\n        </tbody>\n    </table>\n\n</div>\n\n<ng-template #loading>\n    <p class=\"text-center\"></p>\n    Loading...\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from 'src/app/shared/product.service';\nimport { switchMap } from 'rxjs/operators';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Product } from 'src/app/shared/interfaces';\n\n@Component({\n  selector: 'app-edit-page',\n  templateUrl: './edit-page.component.html',\n  styleUrls: ['./edit-page.component.scss']\n})\nexport class EditPageComponent implements OnInit {\n  form: FormGroup\n  product: Product\n  submitted = false\n\n  constructor(\n    private route: ActivatedRoute,\n    private prodServ: ProductService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.route.params.pipe(\n      switchMap( params => {\n        return this.prodServ.getById(params['id'])\n      })\n    ).subscribe(product => {\n      this.product = product\n      this.form = new FormGroup({\n      type: new FormControl(this.product.type, Validators.required),\n      title: new FormControl(this.product.title, Validators.required),\n      photo: new FormControl(this.product.photo, Validators.required),\n      info: new FormControl(this.product.info, Validators.required),\n      price: new FormControl(this.product.price, Validators.required),\n      })\n\n    })\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true\n\n    this.prodServ.update({\n      ...this.product,\n      type: this.form.value.type,\n      title: this.form.value.title,\n      photo: this.form.value.photo,\n      info: this.form.value.info,\n      price: this.form.value.price,\n      date: new Date()\n    }).subscribe( res => {\n      this.submitted = false\n      this.router.navigate(['/admin','dashboard'])\n    })\n  }\n}\n","<div *ngIf=\"form;else loading\">\n    <form [formGroup]='form' (ngSubmit)='submit()'>\n        <h2>Update product</h2>\n    \n        <div class=\"form-control\">\n            <label for=\"type\">Type</label>\n            <select name=\"type\" id=\"type\" formControlName=\"type\">\n                <option value=\"Laptop\">Laptop</option>\n                <option value=\"Tablet\">Tablet</option>\n                <option value=\"Phone\">Phone</option>\n            </select> \n            <div *ngIf=\"form.get('type').touched && form.get('type').invalid\" class='validation'>\n                <small *ngIf=\"form.get('type').errors.required\"> Chose type</small>\n            </div>\n        </div>\n        <div class=\"form-control\">\n            <label for=\"title\">Title</label>\n            <input type=\"title\" id=\"title\" formControlName=\"title\" >  \n            <div *ngIf=\"form.get('title').touched && form.get('title').invalid\" class='validation'>\n                <small *ngIf=\"form.get('title').errors.required\"> Chose title</small>\n            </div>\n        </div>\n        <div class=\"form-control\">\n            <label for=\"photo\">Photo</label>\n           \n            <quill-editor formControlName=\"photo\"></quill-editor>\n        \n        </div>\n        <div class=\"form-control\">\n            <label for=\"info\">Information:</label>\n            <quill-editor formControlName=\"info\"></quill-editor>\n\n        </div>\n        <div class=\"form-control\">\n            <label for=\"price\">Price</label>\n            <input type=\"price\" id=\"price\" formControlName=\"price\" >  \n            <div *ngIf=\"form.get('price').touched && form.get('price').invalid\" class='validation'>\n                <small *ngIf=\"form.get('price').errors.required\"> Chose price</small>\n            </div>\n        </div>\n    \n        <button type=\"submit\" class='btn btn-primary btn-block' [disabled]=\"form.invalid || submitted\">Update</button>\n    </form>\n</div>\n<ng-template #loading>\n    <p class=\"text-center\"></p>\n    Loading...\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  form: FormGroup;\n  submitted = false;\n\n  constructor(\n    public auth: AuthService,\n    private router: Router\n\n  ) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)]),\n\n    });\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitted = true;\n    const user = {\n      email: this.form.value.email,\n      password: this.form.value.password,\n      returnSecureToken: true\n    };\n    this.auth.login(user).subscribe(res => {\n      this.form.reset;\n      this.router.navigate(['/admin', 'dashboard']);\n      this.submitted = false;\n\n    }, () => {\n      this.submitted = false;\n    });\n  }\n\n\n}\n","<form [formGroup]='form' (ngSubmit)='submit()'>\n<h2>Login as Admin</h2>\n<div class=\"form-control\">\n    <label for=\"email\">email</label>\n    <input type=\"email\" id=\"email\" formControlName=\"email\" autocomplete=\"on\">  \n    <div *ngIf=\"form.get('email').touched && form.get('email').invalid\" class='validation'>\n        <small *ngIf=\"form.get('email').errors.required\"> Enter Email</small>\n        <small *ngIf=\"form.get('email').errors.email\"> Enter valid email </small>\n\n    </div>\n</div>\n<div class=\"form-control\">\n    <label for=\"password\">password</label>\n    <input type=\"password\" id=\"password\" formControlName=\"password\" autocomplete=\"on\">  \n    <div *ngIf=\"form.get('password').touched && form.get('password').invalid\">\n        <small *ngIf=\"form.get('password').errors.required\"> Enter Password</small>\n        <small *ngIf=\"form.get('password').errors.minlength\"> Password must be at least {{form.get('password').errors.minlength.requiredlength}} characters.\n            Now he {{form.get('password').errors.minlength.actualLength}} </small>\n\n    </div>\n</div>\n<button type=\"submit\" class='btn btn-primary btn-block' [disabled]=\"form.invalid||submitted\">Logon</button>\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {OrderService} from '../../shared/order.service';\n\n@Component({\n  selector: 'app-orders-page',\n  templateUrl: './orders-page.component.html',\n  styleUrls: ['./orders-page.component.scss']\n})\nexport class OrdersPageComponent implements OnInit, OnDestroy {\n  orders = [];\n  pSub: Subscription;\n  rSub: Subscription;\n\n\n  constructor(\n    private ordersServ: OrderService\n  ) { }\n\n  ngOnInit() {\n    this.pSub = this.ordersServ.getALL().subscribe(orders => {\n      console.log(orders);\n      this.orders = orders;\n    });\n  }\n  remove(id) {\n    this.rSub = this.ordersServ.remove(id).subscribe(\n      () => {\n        this.orders = this.orders.filter(order => order.id !== id);\n      }\n    );\n  }\n  ngOnDestroy() {\n    if (this.pSub) {\n      this.pSub.unsubscribe();\n    }\n    if (this.rSub) {\n      this.rSub.unsubscribe();\n    }\n  }\n\n\n\n}\n\n","<div *ngIf=\" orders.length>0;else empty\">\n  <h2 class=\"text-center\">Table of orders:</h2>\n\n  <table>\n    <thead>\n    <tr>\n      <th>Date</th>\n      <th>Phone</th>\n      <th>Name</th>\n      <th>Address</th>\n      <th>Products</th>\n      <th>Price</th>\n      <th>Payment</th>\n      <th>Status</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let order of  orders;let i=index\">\n      <td> {{ order.date| date : 'dd.MM.yy, H:mm'}} </td>\n      <td> {{order.phone}} </td>\n      <td>{{ order.name}}</td>\n      <td> {{order.adress}} </td>\n      <td>\n        <div *ngFor=\"let product of order.orders\">\n        {{product.title}}\n        </div>\n      </td>\n      <td> {{ order.price}} $</td>\n      <td> {{ order.payment}} </td>\n\n      <td>\n        <button class=\"btn btn-danger\" type=\"button\" (click)=\"remove(order.id)\">Complited</button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n<ng-template #empty>\n  <h2 class=\"text-center\">No orders</h2>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n\n  constructor(\n    public auth: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n  logout($event) {\n    event.preventDefault()\n    this.auth.logout()\n    this.router.navigate(['/admin','login'])\n  }\n}\n","<nav class=\"navbar bg-dark\">\n    <h2>Online Shop</h2>\n\n    <ul *ngIf=\"auth.isAuthenticated();else login\">\n        <li routerLinkActive=\"active\">\n            <a [routerLink]=\"['/admin','dashboard']\">Dashboard</a>\n        </li>\n        <li routerLinkActive=\"active\">\n            <a [routerLink]=\"['/admin','add']\">Add item</a>\n        </li>\n        <li routerLinkActive=\"active\">\n            <a [routerLink]=\"['/admin','orders']\">Orders</a>\n        </li>\n        <li routerLinkActive=\"active\">\n            <a href=\"#\" (click)=\"logout($event)\">Logout</a>\n        </li>\n    </ul>\n    <ng-template #login>\n    <ul > \n        <li routerLinkActive=\"active\">\n        <a [routerLink]=\"['/admin','login']\">Login</a>\n        </li>\n    </ul>\n</ng-template>\n</nav>\n<div class=\"container\">\n<router-outlet></router-outlet>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private auth: AuthService,\n    private router:Router\n    \n  ){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n   \n    if (this.auth.isAuthenticated()) {\n      return true;\n    }\n    else {\n      this.auth.logout();\n      this.router.navigate(['/admin','login'])\n    }\n    \n  }\n \n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from './interfaces';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(products:Product[],productName=''): any {\n  \n    \n    if (!productName.trim()) {\n      return products\n    }\n    return products.filter(product => {\n      return product.title.toLowerCase().includes(productName.toLowerCase())\n    })\n  \n  }\n\n}\n"],"sourceRoot":"webpack:///"}