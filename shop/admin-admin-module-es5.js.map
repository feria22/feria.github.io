{"version":3,"sources":["webpack:///src/app/admin/add-page/add-page.component.ts","webpack:///src/app/admin/add-page/add-page.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/dashboard-page/dashboard-page.component.ts","webpack:///src/app/admin/dashboard-page/dashboard-page.component.html","webpack:///src/app/admin/edit-page/edit-page.component.ts","webpack:///src/app/admin/edit-page/edit-page.component.html","webpack:///src/app/admin/login-page/login-page.component.ts","webpack:///src/app/admin/login-page/login-page.component.html","webpack:///src/app/admin/orders-page/orders-page.component.ts","webpack:///src/app/admin/orders-page/orders-page.component.html","webpack:///src/app/admin/shared/admin-layout/admin-layout.component.ts","webpack:///src/app/admin/shared/admin-layout/admin-layout.component.html","webpack:///src/app/shared/auth.guard.ts","webpack:///src/app/shared/search.pipe.ts"],"names":["AddPageComponent","prodServ","router","submitted","form","type","required","title","photo","info","price","invalid","product","value","date","Date","create","subscribe","res","reset","navigate","submit","selector","templateUrl","styleUrls","AdminModule","forRoot","forChild","path","component","children","redirectTo","pathMatch","canActivate","declarations","imports","exports","DashboardPageComponent","products","pSub","getALL","console","log","unsubscribe","rSub","id","remove","filter","EditPageComponent","route","params","pipe","getById","update","LoginPageComponent","auth","email","password","minLength","user","returnSecureToken","login","OrdersPageComponent","ordersServ","orders","order","AdminLayoutComponent","$event","event","preventDefault","logout","AuthGuard","next","state","isAuthenticated","providedIn","SearchPipe","productName","trim","toLowerCase","includes","name"],"mappings":"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","file":"admin-admin-module-es5.js","sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ProductService } from 'src/app/shared/product.service';\n// import { timingSafeEqual } from 'crypto';\nimport { Router } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-add-page',\n  templateUrl: './add-page.component.html',\n  styleUrls: ['./add-page.component.scss']\n})\nexport class AddPageComponent implements OnInit {\n  form: FormGroup\n  submitted = false;\n  constructor(\n    private prodServ: ProductService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      type: new FormControl(null, Validators.required),\n      title: new FormControl(null, Validators.required),\n      photo: new FormControl(null, Validators.required),\n      info: new FormControl(null, Validators.required),\n      price: new FormControl(null, Validators.required)\n    })\n  }\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitted = true;\n    const product = {\n      type: this.form.value.type,\n      title: this.form.value.title,\n      photo: this.form.value.photo,\n      info:  this.form.value.info,\n      price: this.form.value.price,\n      date: new Date()\n    }\n\n    this.prodServ.create(product).subscribe(res => {\n      this.form.reset();\n      this.submitted = false;\n      this.router.navigate(['/admin','dashboard'])\n    }\n    )\n\n  }\n\n}\n","<form [formGroup]='form' (ngSubmit)='submit()'>\n    <h2>Add new product</h2>\n  \n    <div class=\"form-control\">\n        <label for=\"type\">Type</label>\n        <select name=\"type\" id=\"type\" formControlName=\"type\">\n            <option value=\"Laptop\">Laptop</option>\n            <option value=\"Tablet\">Tablet</option>\n            <option value=\"Phone\">Phone</option>\n        </select> \n        <div *ngIf=\"form.get('type').touched && form.get('type').invalid\" class='validation'>\n            <small *ngIf=\"form.get('type').errors.required\"> Chose type</small>\n        </div>\n    </div>\n    <div class=\"form-control\">\n        <label for=\"title\">Title</label>\n        <input type=\"title\" id=\"title\" formControlName=\"title\" >  \n        <div *ngIf=\"form.get('title').touched && form.get('title').invalid\" class='validation'>\n            <small *ngIf=\"form.get('title').errors.required\"> Chose title</small>\n        </div>\n    </div>\n    <div class=\"form-control\">\n        <label for=\"photo\">Photo</label>\n        <quill-editor formControlName=\"photo\"></quill-editor>\n    </div>\n    <div class=\"form-control\">\n        <label for=\"info\">Information:</label>\n        <quill-editor formControlName=\"info\"></quill-editor>\n\n    </div>\n    <div class=\"form-control\">\n        <label for=\"price\">Price</label>\n        <input type=\"price\" id=\"price\" formControlName=\"price\" >  \n        <div *ngIf=\"form.get('price').touched && form.get('price').invalid\" class='validation'>\n            <small *ngIf=\"form.get('price').errors.required\"> Chose price</small>\n        </div>\n    </div>\n  \n    <button type=\"submit\" class='btn btn-primary btn-block' [disabled]=\"form.invalid || submitted\">Add</button>\n    </form>","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AdminLayoutComponent } from './shared/admin-layout/admin-layout.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { DashboardPageComponent } from './dashboard-page/dashboard-page.component';\r\nimport { AddPageComponent } from './add-page/add-page.component';\r\nimport { OrdersPageComponent } from './orders-page/orders-page.component';\r\nimport { EditPageComponent } from './edit-page/edit-page.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthGuard } from '../shared/auth.guard';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { SearchPipe } from '../shared/search.pipe';\r\n@NgModule({\r\n    declarations: [\r\n        AdminLayoutComponent,\r\n        LoginPageComponent,\r\n        DashboardPageComponent,\r\n        AddPageComponent,\r\n        EditPageComponent,\r\n        OrdersPageComponent,\r\n        SearchPipe,\r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        QuillModule.forRoot(),\r\n        RouterModule.forChild([\r\n            {\r\n                path: '', component: AdminLayoutComponent, children: [\r\n                    {path: '', redirectTo: '/admin/login', pathMatch: 'full'},\r\n                    {path: 'login', component: LoginPageComponent},\r\n                    {path: 'dashboard', component: DashboardPageComponent,canActivate:[AuthGuard]},\r\n                    {path: 'add', component: AddPageComponent,canActivate:[AuthGuard]},\r\n                    {path: 'orders', component: OrdersPageComponent,canActivate:[AuthGuard]},\r\n                    {path: 'product/:id/edit', component: EditPageComponent,canActivate:[AuthGuard]},\r\n                ]\r\n            }\r\n        ])\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AdminModule{\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/shared/product.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard-page',\n  templateUrl: './dashboard-page.component.html',\n  styleUrls: ['./dashboard-page.component.scss']\n})\nexport class DashboardPageComponent implements OnInit {\n  products = []\n  pSub: Subscription\n  rSub: Subscription\n  productName\n  \n  constructor(\n    private prodServ:ProductService\n  ) { }\n\n  ngOnInit() {\n    this.pSub = this.prodServ.getALL().subscribe(products => {\n      console.log(products)\n      this.products = products\n    })\n  }\n  ngOnDestroy() {\n    if (this.pSub) {\n      this.pSub.unsubscribe()\n    }\n    if (this.rSub) {\n      this.rSub.unsubscribe()\n    }\n  }\n  remove(id) {\n    this.rSub =this.prodServ.remove(id).subscribe(\n      () => {\n        this.products=this.products.filter(product=>product.id!==id)\n       }\n     )\n  }\n  \n\n\n}\n","<div *ngIf=\"products.length; else loading\">\n    <h2 class=\"text-center\">Dashboard of products</h2>\n    <div class=\"form-control\">\n        <input type=\"text\" placeholder=\"find a product ...\" [(ngModel)]=\"productName\">\n    </div>\n    <table>\n        <thead>\n            <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Date of creation</th>\n                <th>Open</th>\n                <th>Delete</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let product of products | search: productName ;let idx=index\">\n                <td> {{ idx+1 }} </td>\n                <td> {{product.title}} </td>\n                <td> {{product.price}} </td>\n                <td> {{product.date | date:'dd.MM.yy, H:m' }} </td>\n                <td>\n                    <button class=\"btn btn-dark\" [routerLink]=\"['/admin','product',product.id,'edit']\">Open</button>\n                </td>\n                <td>\n                    <button class=\"btn btn-danger\" (click)=\"remove(product.id)\">Delete</button>\n                </td> \n            </tr>\n        </tbody>\n    </table>\n\n</div>\n\n<ng-template #loading>\n    <p class=\"text-center\"></p>\n    Loading...\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from 'src/app/shared/product.service';\nimport { switchMap } from 'rxjs/operators';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Product } from 'src/app/shared/interfaces';\n\n@Component({\n  selector: 'app-edit-page',\n  templateUrl: './edit-page.component.html',\n  styleUrls: ['./edit-page.component.scss']\n})\nexport class EditPageComponent implements OnInit {\n  form: FormGroup\n  product: Product\n  submitted = false\n\n  constructor(\n    private route: ActivatedRoute,\n    private prodServ: ProductService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.route.params.pipe(\n      switchMap( params => {\n        return this.prodServ.getById(params['id'])\n      })\n    ).subscribe(product => {\n      this.product = product\n      this.form = new FormGroup({\n      type: new FormControl(this.product.type, Validators.required),\n      title: new FormControl(this.product.title, Validators.required),\n      photo: new FormControl(this.product.photo, Validators.required),\n      info: new FormControl(this.product.info, Validators.required),\n      price: new FormControl(this.product.price, Validators.required),\n      })\n\n    })\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true\n\n    this.prodServ.update({\n      ...this.product,\n      type: this.form.value.type,\n      title: this.form.value.title,\n      photo: this.form.value.photo,\n      info: this.form.value.info,\n      price: this.form.value.price,\n      date: new Date()\n    }).subscribe( res => {\n      this.submitted = false\n      this.router.navigate(['/admin','dashboard'])\n    })\n  }\n}\n","<div *ngIf=\"form;else loading\">\n    <form [formGroup]='form' (ngSubmit)='submit()'>\n        <h2>Update product</h2>\n    \n        <div class=\"form-control\">\n            <label for=\"type\">Type</label>\n            <select name=\"type\" id=\"type\" formControlName=\"type\">\n                <option value=\"Laptop\">Laptop</option>\n                <option value=\"Tablet\">Tablet</option>\n                <option value=\"Phone\">Phone</option>\n            </select> \n            <div *ngIf=\"form.get('type').touched && form.get('type').invalid\" class='validation'>\n                <small *ngIf=\"form.get('type').errors.required\"> Chose type</small>\n            </div>\n        </div>\n        <div class=\"form-control\">\n            <label for=\"title\">Title</label>\n            <input type=\"title\" id=\"title\" formControlName=\"title\" >  \n            <div *ngIf=\"form.get('title').touched && form.get('title').invalid\" class='validation'>\n                <small *ngIf=\"form.get('title').errors.required\"> Chose title</small>\n            </div>\n        </div>\n        <div class=\"form-control\">\n            <label for=\"photo\">Photo</label>\n           \n            <quill-editor formControlName=\"photo\"></quill-editor>\n        \n        </div>\n        <div class=\"form-control\">\n            <label for=\"info\">Information:</label>\n            <quill-editor formControlName=\"info\"></quill-editor>\n\n        </div>\n        <div class=\"form-control\">\n            <label for=\"price\">Price</label>\n            <input type=\"price\" id=\"price\" formControlName=\"price\" >  \n            <div *ngIf=\"form.get('price').touched && form.get('price').invalid\" class='validation'>\n                <small *ngIf=\"form.get('price').errors.required\"> Chose price</small>\n            </div>\n        </div>\n    \n        <button type=\"submit\" class='btn btn-primary btn-block' [disabled]=\"form.invalid || submitted\">Update</button>\n    </form>\n</div>\n<ng-template #loading>\n    <p class=\"text-center\"></p>\n    Loading...\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  form: FormGroup;\n  submitted = false;\n\n  constructor(\n    public auth: AuthService,\n    private router: Router\n\n  ) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)]),\n\n    });\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitted = true;\n    const user = {\n      email: this.form.value.email,\n      password: this.form.value.password,\n      returnSecureToken: true\n    };\n    this.auth.login(user).subscribe(res => {\n      this.form.reset;\n      this.router.navigate(['/admin', 'dashboard']);\n      this.submitted = false;\n\n    }, () => {\n      this.submitted = false;\n    });\n  }\n\n\n}\n","<form [formGroup]='form' (ngSubmit)='submit()'>\n<h2>Login as Admin</h2>\n<div class=\"form-control\">\n    <label for=\"email\">email</label>\n    <input type=\"email\" id=\"email\" formControlName=\"email\" autocomplete=\"on\">  \n    <div *ngIf=\"form.get('email').touched && form.get('email').invalid\" class='validation'>\n        <small *ngIf=\"form.get('email').errors.required\"> Enter Email</small>\n        <small *ngIf=\"form.get('email').errors.email\"> Enter valid email </small>\n\n    </div>\n</div>\n<div class=\"form-control\">\n    <label for=\"password\">password</label>\n    <input type=\"password\" id=\"password\" formControlName=\"password\" autocomplete=\"on\">  \n    <div *ngIf=\"form.get('password').touched && form.get('password').invalid\">\n        <small *ngIf=\"form.get('password').errors.required\"> Enter Password</small>\n        <small *ngIf=\"form.get('password').errors.minlength\"> Password must be at least {{form.get('password').errors.minlength.requiredlength}} characters.\n            Now he {{form.get('password').errors.minlength.actualLength}} </small>\n\n    </div>\n</div>\n<button type=\"submit\" class='btn btn-primary btn-block' [disabled]=\"form.invalid||submitted\">Logon</button>\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {OrderService} from '../../shared/order.service';\n\n@Component({\n  selector: 'app-orders-page',\n  templateUrl: './orders-page.component.html',\n  styleUrls: ['./orders-page.component.scss']\n})\nexport class OrdersPageComponent implements OnInit, OnDestroy {\n  orders = [];\n  pSub: Subscription;\n  rSub: Subscription;\n\n\n  constructor(\n    private ordersServ: OrderService\n  ) { }\n\n  ngOnInit() {\n    this.pSub = this.ordersServ.getALL().subscribe(orders => {\n      console.log(orders);\n      this.orders = orders;\n    });\n  }\n  remove(id) {\n    this.rSub = this.ordersServ.remove(id).subscribe(\n      () => {\n        this.orders = this.orders.filter(order => order.id !== id);\n      }\n    );\n  }\n  ngOnDestroy() {\n    if (this.pSub) {\n      this.pSub.unsubscribe();\n    }\n    if (this.rSub) {\n      this.rSub.unsubscribe();\n    }\n  }\n\n\n\n}\n\n","<div *ngIf=\" orders.length>0;else empty\">\n  <h2 class=\"text-center\">Table of orders:</h2>\n\n  <table>\n    <thead>\n    <tr>\n      <th>Date</th>\n      <th>Phone</th>\n      <th>Name</th>\n      <th>Address</th>\n      <th>Products</th>\n      <th>Price</th>\n      <th>Payment</th>\n      <th>Status</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let order of  orders;let i=index\">\n      <td> {{ order.date| date : 'dd.MM.yy, H:mm'}} </td>\n      <td> {{order.phone}} </td>\n      <td>{{ order.name}}</td>\n      <td> {{order.adress}} </td>\n      <td>\n        <div *ngFor=\"let product of order.orders\">\n        {{product.title}}\n        </div>\n      </td>\n      <td> {{ order.price}} $</td>\n      <td> {{ order.payment}} </td>\n\n      <td>\n        <button class=\"btn btn-danger\" type=\"button\" (click)=\"remove(order.id)\">Complited</button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n<ng-template #empty>\n  <h2 class=\"text-center\">No orders</h2>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n\n  constructor(\n    public auth: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n  logout($event) {\n    event.preventDefault()\n    this.auth.logout()\n    this.router.navigate(['/admin','login'])\n  }\n}\n","<nav class=\"navbar bg-dark\">\n    <h2>Online Shop</h2>\n\n    <ul *ngIf=\"auth.isAuthenticated();else login\">\n        <li routerLinkActive=\"active\">\n            <a [routerLink]=\"['/admin','dashboard']\">Dashboard</a>\n        </li>\n        <li routerLinkActive=\"active\">\n            <a [routerLink]=\"['/admin','add']\">Add item</a>\n        </li>\n        <li routerLinkActive=\"active\">\n            <a [routerLink]=\"['/admin','orders']\">Orders</a>\n        </li>\n        <li routerLinkActive=\"active\">\n            <a href=\"#\" (click)=\"logout($event)\">Logout</a>\n        </li>\n    </ul>\n    <ng-template #login>\n    <ul > \n        <li routerLinkActive=\"active\">\n        <a [routerLink]=\"['/admin','login']\">Login</a>\n        </li>\n    </ul>\n</ng-template>\n</nav>\n<div class=\"container\">\n<router-outlet></router-outlet>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private auth: AuthService,\n    private router:Router\n    \n  ){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n   \n    if (this.auth.isAuthenticated()) {\n      return true;\n    }\n    else {\n      this.auth.logout();\n      this.router.navigate(['/admin','login'])\n    }\n    \n  }\n \n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from './interfaces';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(products:Product[],productName=''): any {\n  \n    \n    if (!productName.trim()) {\n      return products\n    }\n    return products.filter(product => {\n      return product.title.toLowerCase().includes(productName.toLowerCase())\n    })\n  \n  }\n\n}\n"]}